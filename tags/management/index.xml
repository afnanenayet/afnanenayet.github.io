<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>management on Afnan Enayet</title>
    <link>https://afnan.io/tags/management/</link>
    <description>Recent content in management on Afnan Enayet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://afnan.io/tags/management/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Primer on Pointers</title>
      <link>https://afnan.io/posts/2017-07-27-a-primer-on-pointers/</link>
      <pubDate>Thu, 27 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://afnan.io/posts/2017-07-27-a-primer-on-pointers/</guid>
      <description>A lot of people have trouble grasping manual memory management when they first encounter it. The syntax can be a little confusing and debugging can be an extremely painful process - whether you have a segfault or Valgrind is complaining that you still have memory leaks.
Using pointers in C, while a little intimidating at first, is not as difficult as most people expect.
C gives you a lot of access to memory - you can allocate bytes for use in your program, you can deallocate them, you can directly access memory addresses in your program, and pass them around wherever you want.</description>
    </item>
    
  </channel>
</rss>